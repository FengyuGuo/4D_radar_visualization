<?xml version="1.0"?>



<launch>


  <!-- declare arguments with default values -->
  <arg name="play_lidar" default="true" />
  <arg name="radar_delay" default="0.9" />
  <arg name="calibration" default="/media/guo/fs/4D_radar_dataset/Pandar128_Correction.csv"/>
  <arg name="device_ip" default="192.168.1.201" />
  <arg name="host_ip" default="" />
  <arg name="frame_id" default="PandarSwift" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
  <arg name="max_range" default="130.0" />
  <arg name="firetime_file" default="$(find pandar_pointcloud)/params/Pandar128_Firetimes.csv"/>
  <arg name="min_range" default="0.5" />
  <arg name="pcap" default="/media/guo/fs/4D_radar_dataset/Campus_2/campus2_lidar.pcap" />
  <arg name="radar_dataset" default="/media/guo/fs/4D_radar_dataset/Campus_2/campus2.bag" />
  <!-- <arg name="pcap" default="/media/guo/fs/4D_radar_dataset/Parking_lot/parking_lot_lidar.pcap" />
  <arg name="radar_dataset" default="/media/guo/fs/4D_radar_dataset/Parking_lot/parking_lot.bag" /> -->
  <arg name="port" default="2368" />
  <arg name="read_fast" default="false" />
  <arg name="read_once" default="false" />
  <arg name="repeat_delay" default="0.0" />
  <arg name="rpm" default="600.0" />
  <arg name="start_angle" default="0.0" />
  <arg name="publish_model" default="both_point_raw" />
  <arg name="namespace" default="hesai"/>
  <arg name="multicast_ip"  default=""/>
  <arg name="coordinate_correction_flag" default="false" />
  <arg name="channel_config_file" default="$(find pandar_pointcloud)/params/QT128C2X_Channel_Cofig.csv" />
  <!--"cert_file" represents the path of the user's certificate-->
  <arg name="cert_file" default="" />
  <!--"private_key_file" represents the path of the user's private key-->
  <arg name="private_key_file" default="" />
  <!--"ca_file" represents the path of the root certificate-->
  <arg name="ca_file" default="" />

    <!-- Radar to PointCloud2 Converter Node -->
    <node name="radar_to_pc2_node" pkg="radar_to_pc2" type="radar_to_pc2_node" output="screen">
        <!-- Parameters -->
        <param name="radar_topic" value="/radar_scan" />
        <param name="cloud_topic" value="/radar_pointcloud" />
        <param name="output_frame" value="radar" />
    </node>
    <!-- Publish tf_static PandarSwift -->
    <node name="static_tf_broadcaster1" pkg="tf2_ros" type="static_transform_publisher" args="3.891 0 0.313 0.0035 0.00802 3.1415 vehicle radar " output="screen">
    </node>
    <node name="static_tf_broadcaster2" pkg="tf2_ros" type="static_transform_publisher" args="1.659 -0.1035 1.521 1.575 -0.002967 -0.01518 vehicle PandarSwift " output="screen">
    </node>
    <node name="radar_player" pkg="rosbag" type="play" args="-d $(arg radar_delay) $(arg radar_dataset)" output="screen">
    </node>


  <group if="$(arg play_lidar)">

    <!-- start nodelet manager -->
    <node pkg="nodelet" type="nodelet" ns="$(arg namespace)" name="$(arg manager)" args="manager" output="screen" />

    <!-- start cloud nodelet -->
    <include file="$(find pandar_pointcloud)/launch/cloud_nodelet.launch">
        <arg name="calibration" value="$(arg calibration)"/>
        <arg name="manager" value="$(arg manager)" />
        <arg name="max_range" value="$(arg max_range)"/>
        <arg name="min_range" value="$(arg min_range)"/>
        <arg name="start_angle" value="$(arg start_angle)"/>
        <arg name="device_ip" value="$(arg device_ip)" />
        <arg name="host_ip" value="$(arg host_ip)" />
        <arg name="frame_id" value="$(arg frame_id)"/>
        <arg name="publish_model" value="$(arg publish_model)"/>
        <arg name="pcap" value="$(arg pcap)"/>
        <arg name="port" value="$(arg port)" />
        <arg name="read_fast" value="$(arg read_fast)"/>
        <arg name="read_once" value="$(arg read_once)"/>
        <arg name="repeat_delay" value="$(arg repeat_delay)"/>
        <arg name="rpm" value="$(arg rpm)"/>
        <arg name="firetime_file" value="$(arg firetime_file)"/>
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="multicast_ip" value="$(arg multicast_ip)"/>
        <arg name="coordinate_correction_flag" value="$(arg coordinate_correction_flag)"/>
        <arg name="channel_config_file" value="$(arg channel_config_file)"/>
        <arg name="cert_file" value="$(arg cert_file)" />
        <arg name="private_key_file" value="$(arg private_key_file)" />
        <arg name="ca_file" value="$(arg ca_file)" />
    </include>

  </group>
</launch>
